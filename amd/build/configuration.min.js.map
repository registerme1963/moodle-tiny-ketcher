{"version":3,"file":"configuration.min.js","sources":["../src/configuration.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Tiny tiny_keteditor for Moodle.\n *\n * @module      tiny_keteditor/configurastion\n * @copyright   2024 Venkatesan Rangarajan <venkatesanrpu@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {\n    buttonName\n}\nfrom './common';\nimport uploadFile from 'editor_tiny/uploader';\nimport {\n    addContextmenuItem,\n}\nfrom 'editor_tiny/utils';\n\nconst configureMenu = (menu) => {\n    menu.insert.items = `${buttonName} ${menu.insert.items}`;\n    return menu;\n};\n\nconst configureToolbar = (toolbar) => {\n    // The toolbar contains an array of named sections.\n    // The Moodle integration ensures that there is a section called 'content'.\n    return toolbar.map((section) => {\n        if (section.name === 'content') {\n            // Insert the image, and embed, buttons at the start of it.\n            section.items.unshift(buttonName);\n        }\n        return section;\n    });\n};\n\nexport const configure = (instanceConfig) => {\n    // Update the instance configuration to add the Media menu option to the menus and toolbars and upload_handler.\n    return {\n        contextmenu: addContextmenuItem(instanceConfig.contextmenu, buttonName),\n        menu: configureMenu(instanceConfig.menu),\n        toolbar: configureToolbar(instanceConfig.toolbar),\n\n        // eslint-disable-next-line camelcase\n        images_upload_handler: (blobInfo, progress) => uploadFile(\n            window.tinymce.activeEditor,\n            'image',\n            blobInfo.blob(),\n            blobInfo.filename(),\n            progress),\n        // eslint-disable-next-line camelcase\n        images_reuse_filename: true,\n    };\n};\n"],"names":["instanceConfig","contextmenu","buttonName","menu","insert","items","toolbar","map","section","name","unshift","images_upload_handler","blobInfo","progress","window","tinymce","activeEditor","blob","filename","images_reuse_filename"],"mappings":";;;;;;;sKAkD0BA,uBAEf,CACHC,aAAa,6BAAmBD,eAAeC,YAAaC,oBAC5DC,MArBeA,KAqBKH,eAAeG,KApBvCA,KAAKC,OAAOC,MAAS,GAAEH,sBAAcC,KAAKC,OAAOC,QAC1CF,MAoBHG,SAjBkBA,QAiBQN,eAAeM,QAdtCA,QAAQC,KAAKC,UACK,YAAjBA,QAAQC,MAERD,QAAQH,MAAMK,QAAQR,oBAEnBM,YAYPG,sBAAuB,CAACC,SAAUC,YAAa,qBAC3CC,OAAOC,QAAQC,aACf,QACAJ,SAASK,OACTL,SAASM,WACTL,UAEJM,uBAAuB,GA3BLb,IAAAA,QALHH"}