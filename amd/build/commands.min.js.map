{"version":3,"file":"commands.min.js","sources":["../src/commands.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Common values helper for the Moodle tiny_keteditor plugin.\n *\n * @module      tiny_keteditor/commands\n * @copyright   2024 Venkatesan Rangarajan <venkatesanrpu@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {\n    getButtonImage\n}\nfrom 'editor_tiny/utils';\nimport {\n    get_string as getString\n}\nfrom 'core/str';\nimport {\n    component,\n    icon,\n    buttonName\n}\nfrom './common';\nimport {\n    ketcherEmbed,\n    saveData\n}\nfrom './embed';\n\nconst isImage = (node) => node.nodeName.toLowerCase() === 'img';\n/**\n * Handle the action for your plugin.\n * @param {TinyMCE.editor} editor The tinyMCE editor instance.\n */\n\nconst handleAction = async(editor) => {\n    const ketcherImage = new ketcherEmbed(editor);\n    ketcherImage.init();\n    try {\n        const ketcher = await ketcherImage.waitForKetcher();\n        if (window.json) {\n            window.console.log(\"molecule loading...\", window.json);\n            ketcher.setMolecule(window.json);\n        } else {\n            window.console.log(\"Ketcher Molecular Data Not Available\");\n        }\n    } catch (error) {\n        window.console.error(error.message);\n    }\n    document.getElementById('actionButton').addEventListener('click', saveData);\n};\n\nexport const getSetup = async() => {\n    //    const isImage = (node) => node.nodeName.toLowerCase() === 'img';\n\n    const [\n        buttonNameTitle,\n        buttonImage,\n    ] = await Promise.all([\n                getString('buttonNameTitle', component),\n                getButtonImage('icon', component),\n            ]);\n\n    return (editor) => {\n        // Register the Moodle SVG as an icon suitable for use as a TinyMCE toolbar button.\n        editor.ui.registry.addIcon(icon, buttonImage.html);\n\n        // Register the startdemo Toolbar Button.\n        editor.ui.registry.addButton(buttonName, {\n            icon,\n            tooltip: buttonNameTitle,\n            onAction: () => handleAction(editor),\n        });\n\n        editor.ui.registry.addToggleButton(buttonName, {\n            icon,\n            tooltip: buttonNameTitle,\n            onAction: () => handleAction(editor, window.json),\n            onSetup: api => {\n                return editor.selection.selectorChangedWithUnbind(\n                    'img:not([data-mce-object]):not([data-mce-placeholder]),figure.image',\n                    function () {\n                    var node = editor.selection.getNode();\n                    var parentNode = node.parentNode;\n                    const html = editor.serializer.serialize(parentNode);\n                    const commentMatch = html.match(/<!--(.*?)-->/);\n                    if (commentMatch) {\n                        try {\n                            var json = JSON.parse(commentMatch[1]);\n                            // If the comment contains valid JSON, call api.setActive and store the JSON\n                            api.setActive(true);\n                            window.json = JSON.stringify(json); // Save the JSON to window.json\n                        } catch (e) {\n                            // If the comment does not contain valid JSON, call api.setActive with false\n                            api.setActive(false);\n                        }\n                    } else {\n                        api.setActive(false);\n                    }\n                }).unbind;\n            }\n        });\n\n        editor.ui.registry.addContextToolbar(buttonName, {\n            predicate: isImage,\n            items: buttonName,\n            position: 'node',\n            scope: 'node'\n        });\n\n        // Add the startdemo Menu Item.\n        // This allows it to be added to a standard menu, or a context menu.\n        editor.ui.registry.addMenuItem(buttonName, {\n            icon,\n            text: buttonNameTitle,\n            onAction: () => handleAction(editor),\n        });\n\n    };\n};\n"],"names":["isImage","node","nodeName","toLowerCase","handleAction","async","ketcherImage","ketcherEmbed","editor","init","ketcher","waitForKetcher","window","json","console","log","setMolecule","error","message","document","getElementById","addEventListener","saveData","buttonNameTitle","buttonImage","Promise","all","component","ui","registry","addIcon","icon","html","addButton","buttonName","tooltip","onAction","addToggleButton","onSetup","api","selection","selectorChangedWithUnbind","parentNode","getNode","commentMatch","serializer","serialize","match","JSON","parse","setActive","stringify","e","unbind","addContextToolbar","predicate","items","position","scope","addMenuItem","text"],"mappings":";;;;;;;;MA2CMA,QAAWC,MAAyC,QAAhCA,KAAKC,SAASC,cAMlCC,aAAeC,MAAAA,eACXC,aAAe,IAAIC,oBAAaC,QACtCF,aAAaG,iBAEHC,cAAgBJ,aAAaK,iBAC/BC,OAAOC,MACPD,OAAOE,QAAQC,IAAI,sBAAuBH,OAAOC,MACjDH,QAAQM,YAAYJ,OAAOC,OAE3BD,OAAOE,QAAQC,IAAI,wCAEzB,MAAOE,OACLL,OAAOE,QAAQG,MAAMA,MAAMC,SAE/BC,SAASC,eAAe,gBAAgBC,iBAAiB,QAASC,oCAG9CjB,gBAIhBkB,gBACAC,mBACMC,QAAQC,IAAI,EACV,mBAAU,kBAAmBC,oBAC7B,yBAAe,OAAQA,4BAG3BnB,SAEJA,OAAOoB,GAAGC,SAASC,QAAQC,aAAMP,YAAYQ,MAG7CxB,OAAOoB,GAAGC,SAASI,UAAUC,mBAAY,CACrCH,KAAAA,aACAI,QAASZ,gBACTa,SAAU,IAAMhC,aAAaI,UAGjCA,OAAOoB,GAAGC,SAASQ,gBAAgBH,mBAAY,CAC3CH,KAAAA,aACAI,QAASZ,gBACTa,SAAU,IAAMhC,aAAaI,OAAQI,OAAOC,MAC5CyB,QAASC,KACE/B,OAAOgC,UAAUC,0BACpB,uEACA,eAEIC,WADOlC,OAAOgC,UAAUG,UACND,iBAEhBE,aADOpC,OAAOqC,WAAWC,UAAUJ,YACfK,MAAM,mBAC5BH,qBAEQ/B,KAAOmC,KAAKC,MAAML,aAAa,IAEnCL,IAAIW,WAAU,GACdtC,OAAOC,KAAOmC,KAAKG,UAAUtC,MAC/B,MAAOuC,GAELb,IAAIW,WAAU,QAGlBX,IAAIW,WAAU,MAEnBG,SAIX7C,OAAOoB,GAAGC,SAASyB,kBAAkBpB,mBAAY,CAC7CqB,UAAWvD,QACXwD,MAAOtB,mBACPuB,SAAU,OACVC,MAAO,SAKXlD,OAAOoB,GAAGC,SAAS8B,YAAYzB,mBAAY,CACvCH,KAAAA,aACA6B,KAAMrC,gBACNa,SAAU,IAAMhC,aAAaI"}